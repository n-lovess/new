CHIP Decoder201830364 {
    IN A, B, C, D;
    OUT a, b, c, d, e, f, g;

    PARTS:

    // Segment a
    Not(in=A, out=notA);
    Not(in=B, out=notB);
    Not(in=C, out=notC);
    Not(in=D, out=notD);

    And(a=notA, b=C, out=term1a);
    And(a=term1a, b=notD, out=on1a);

    And(a=A, b=notB, out=term2a);
    And(a=term2a, b=notD, out=on2a);

    And(a=A, b=notB, out=term3a);
    And(a=term3a, b=notC, out=on3a);

    And(a=A, b=C, out=term4a);
    And(a=term4a, b=D, out=on4a);

    Or(a=on1a, b=on2a, out=temp1a);
    Or(a=temp1a, b=on3a, out=temp2a);
    Or(a=temp2a, b=on4a, out=a);

    // Segment b
    And(a=notA, b=notB, out=term1b);
    And(a=term1b, b=notD, out=on1b);

    And(a=C, b=notD, out=on2b);

    And(a=A, b=B, out=term3b);
    And(a=A, b=C, out=term4b);

    Or(a=on1b, b=on2b, out=temp1b);
    Or(a=temp1b, b=term3b, out=temp2b);
    Or(a=temp2b, b=term4b, out=b);

    // Segment c
    And(a=notA, b=notB, out=term1c);
    And(a=term1c, b=notC, out=on1c);

    And(a=notA, b=B, out=term2c);
    And(a=term2c, b=notD, out=on2c);

    And(a=A, b=B, out=term3c);
    And(a=term3c, b=notC, out=on3c);

    Or(a=on1c, b=on2c, out=temp1c);
    Or(a=temp1c, b=on3c, out=c);

    // Segment d
    And(a=notA, b=B, out=term1d);
    And(a=term1d, b=notC, out=on1d);

    And(a=A, b=notB, out=on2d);

    And(a=A, b=C, out=on3d);

    And(a=notC, b=notD, out=on4d);

    And(a=B, b=notD, out=on5d);

    Or(a=on1d, b=on2d, out=temp1d);
    Or(a=temp1d, b=on3d, out=temp2d);
    Or(a=temp2d, b=on4d, out=temp3d);
    Or(a=temp3d, b=on5d, out=d);

    // Segment e
    And(a=notA, b=B, out=term1e);
    And(a=A, b=notB, out=term2e);
    And(a=notC, b=D, out=term3e);
    And(a=notA, b=notC, out=term4e);
    And(a=notA, b=D, out=term5e);

    Or(a=term1e, b=term2e, out=temp1e);
    Or(a=temp1e, b=term3e, out=temp2e);
    Or(a=temp2e, b=term4e, out=temp3e);
    Or(a=temp3e, b=term5e, out=e);

    // Segment f
    And(a=notA, b=C, out=term1f);
    And(a=B, b=C, out=term2f);
    And(a=notB, b=C, out=term3f);
    And(a=notA, b=B, out=term4f);
    And(a=A, b=notB, out=term5f);
    And(a=notB, b=notC, out=term6f);
    And(a=A, b=notC, out=term7f);

    Or(a=term1f, b=term2f, out=temp1f);
    Or(a=temp1f, b=term3f, out=temp2f);
    Or(a=temp2f, b=term4f, out=temp3f);
    Or(a=temp3f, b=term5f, out=temp4f);
    Or(a=temp4f, b=term6f, out=temp5f);
    Or(a=temp5f, b=term7f, out=f);

    // Segment g
    And(a=A, b=notB, out=term1g);
    And(a=term1g, b=notD, out=on1g);

    And(a=A, b=notC, out=term2g);
    And(a=term2g, b=D, out=on2g);

    And(a=notA, b=notB, out=on3g);

    And(a=A, b=notB, out=term4g);
    And(a=term4g, b=notC, out=on4g);

    And(a=notA, b=notC, out=term5g);
    And(a=term5g, b=notD, out=on5g);

    And(a=notA, b=C, out=term6g);
    And(a=term6g, b=D, out=on6g);

    Or(a=on1g, b=on2g, out=temp1g);
    Or(a=temp1g, b=on3g, out=temp2g);
    Or(a=temp2g, b=on4g, out=temp3g);
    Or(a=temp3g, b=on5g, out=temp4g);
    Or(a=temp4g, b=on6g, out=g);
}
