CHIP Decoder201830364 {
    IN A, B, C, D;
    OUT a, b, c, d, e, f, g;

    PARTS:
    // Segment a
    Not(in=A, out=notAa);
    Not(in=B, out=notBa);
    Not(in=C, out=notCa);
    Not(in=D, out=notDa);
    And(a=notAa, b=notBa, out=terma1);
    And(a=notCa, b=notDa, out=terma2);
    And(a=A, b=notBa, out=terma3);
    Or(a=terma1, b=terma2, out=intera1);
    Or(a=intera1, b=terma3, out=a);

    // Segment b
    Not(in=A, out=notAb);
    Not(in=B, out=notBb);
    Not(in=C, out=notCb);
    Not(in=D, out=notDb);
    And(a=notAb, b=notBb, out=termb1);
    And(a=B, b=C, out=termb2);
    And(a=notCb, b=notDb, out=termb3);
    Or(a=termb1, b=termb2, out=interb1);
    Or(a=interb1, b=termb3, out=b);

    // Segment c
    Not(in=A, out=notAc);
    Not(in=B, out=notBc);
    Not(in=C, out=notCc);
    Not(in=D, out=notDc);
    And(a=notAc, b=notBc, out=tempc1);
    And(a=tempc1, b=notCc, out=tempc2);
    And(a=tempc2, b=notDc, out=onc0);
    And(a=notAc, b=notBc, out=tempc3);
    And(a=tempc3, b=C, out=tempc4);
    And(a=tempc4, b=notDc, out=onc1);
    And(a=notAc, b=B, out=tempc5);
    And(a=tempc5, b=C, out=tempc6);
    And(a=tempc6, b=notDc, out=onc2);
    Or(a=onc0, b=onc1, out=interc1);
    Or(a=interc1, b=onc2, out=c);

    // Segment d
    Not(in=A, out=notAd);
    Not(in=B, out=notBd);
    Not(in=C, out=notCd);
    Not(in=D, out=notDd);
    And(a=notAd, b=B, out=termd1);
    And(a=termd1, b=notCd, out=termd2);
    And(a=A, b=notBd, out=termd3);
    And(a=A, b=C, out=termd4);
    And(a=notCd, b=notDd, out=termd5);
    And(a=B, b=notDd, out=termd6);
    Or(a=termd2, b=termd3, out=interd1);
    Or(a=termd4, b=termd5, out=interd2);
    Or(a=termd6, b=interd2, out=interd3);
    Or(a=interd1, b=interd3, out=d);

    // Segment e
    Not(in=A, out=notAe);
    Not(in=B, out=notBe);
    Not(in=C, out=notCe);
    Not(in=D, out=notDe);
    And(a=notAe, b=B, out=terme1);
    And(a=A, b=notBe, out=terme2);
    And(a=notCe, b=D, out=terme3);
    And(a=notAe, b=notCe, out=terme4);
    And(a=notAe, b=D, out=terme5);
    Or(a=terme1, b=terme2, out=intere1);
    Or(a=terme3, b=terme4, out=intere2);
    Or(a=intere1, b=intere2, out=intere3);
    Or(a=intere3, b=terme5, out=e);

    // Segment f
    Not(in=A, out=notAf);
    Not(in=B, out=notBf);
    Not(in=C, out=notCf);
    Not(in=D, out=notDf);
    And(a=notAf, b=B, out=termf1);
    And(a=A, b=notBf, out=termf2);
    And(a=notAf, b=C, out=termf3);
    And(a=notAf, b=D, out=termf4);
    And(a=notBf, b=notCf, out=termf5);
    Or(a=termf1, b=termf2, out=interf1);
    Or(a=termf3, b=termf4, out=interf2);
    Or(a=interf1, b=interf2, out=interf3);
    Or(a=interf3, b=termf5, out=f);

    // Segment g
    Not(in=A, out=notAg);
    Not(in=B, out=notBg);
    Not(in=C, out=notCg);
    Not(in=D, out=notDg);
    And(a=notBg, b=C, out=termg1);
    And(a=B, b=notCg, out=termg2);
    And(a=B, b=notDg, out=termg3);
    Or(a=termg1, b=termg2, out=interg1);
    Or(a=interg1, b=termg3, out=g);
}
