CHIP Decoder {
    
    IN in[4];
    OUT a,b,c,d,e,f,g;

    PARTS:
    Not(in=A, out=notA);
    Not(in=B, out=notB);
    Not(in=C, out=notC);
    Not(in=D, out=notD);


    And(a=notB, b=notC, out=termAp1);
    And(a=termAp1, b=notD, out=termA1);
    And(a=A, b=notC, out=termA2);
    And(a=notB, b=A, out=termAp3);
    And(a=termAp3, b=D, out=termA3);
    And(a=B, b=notC, out=termAp4);
    And(a=termAp4, b=D, out=termA4);
    And(a=notA, b=notB, out=termAp5);
    And(a=termAp5, b=C, out=termA5);
    And(a=B, b=C, out=termAp6);
    And(a=termAp6, b=notD, out=termA6);


    Or(a=termA1, b=termA2, out=interA1);
    Or(a=termA3, b=termA4, out=interA2);
    Or(a=termA5, b=termA6, out=interA3);
    Or(a=interA1, b=interA2, out=interA4);
    Or(a=interA3, b=interA4, out=a);



    And(a=A, b=B, out=termB1);
    And(a=C, b=notD, out=termB2);
    And(a=notB, b=notD, out=termB3);
    And(a=A, b=C, out=termBp4);
    And(a=termBp4, b=D, out=termB4);

    Or(a=termB1, b=termB2, out=interB3);
    Or(a=termB3, b=termB4, out=interB4);
    Or(a=interB3, b=interB4, out=b);


    And(a=C, b=notD, out=termC1);
    And(a=A, b=C, out=termC2);
    And(a=A, b=D, out=termC3);
    And(a=A, b=notB, out=termC4);
    And(a=notB, b=C, out=termC5);
    And(a=notA, b=B, out=termCp6);
    And(a=termCp6, b=notC, out=termC6);

    Or(a=termC1, b=termC2, out=interC1);
    Or(a=termC3, b=termC4, out=interC2);
    Or(a=termC5, b=termC6, out=interC3);
    Or(a=interC1, b=interC2, out=interC4);
    Or(a=interC3, b=interC4, out=c);

    And(a=A, b=C, out=termD1);
    And(a=A, b=notB, out=termD2);
    And(a=notC, b=notD, out=termD3);
    And(a=B, b=C, out=termDp4);
    And(a=termDp4, b=notD, out=termD4);
    And(a=notA, b=B, out=termDp5);
    And(a=termDp5, b=notC, out=termD5);

    Or(a=termD1, b=termD2, out=interD1);
    Or(a=termD3, b=termD4, out=interD2);
    Or(a=interD1, b=interD2, out=interD3);
    Or(a=interD3, b=termD5, out=d);

    And(a=notA, b=notC, out=termE1);
    And(a=D, b=notC, out=termE2);
    And(a=notA, b=B, out=termE3);
    And(a=A, b=notB, out=termE4);
    And(a=notA, b=notB, out=termEp5);
    And(a=termEp5, b=D, out=termE5);

    Or(a=termE1, b=termE2, out=termEinter1);
    Or(a=termE3, b=termE4, out=termEinter2);
    Or(a=termEinter1, b=termEinter2, out=interE3);
    Or(a=interE3, b=termE5, out=e);

 
    And(a=notA, b=C, out=termF1);
    And(a=B, b=C, out=termF2);
    And(a=notB, b=C, out=termF3p1);
    And(a=termF3p1, b=notD, out=termF3);
    And(a=notA, b=B, out=termF4p1);
    And(a=termF4p1, b=D, out=termF4);
    And(a=A, b=notB, out=termF5p1);
    And(a=termF5p1, b= notC, out=termF5);
    And(a=notB, b=notC, out=termF6p1);
    And(a=termF6p1, b=notD, out=termF6);
    And(a=A, b=notC, out= termF7p1);
    And(a=termF7p1, b=notD, out=termF7);


    Or(a=termF1, b=termF2, out=interF1);
    Or(a=termF3, b=termF4, out=interF2);
    Or(a=interF1, b=interF2, out=interF3);
    Or(a=termF5, b=termF6, out=interF4);
    Or(a=interF4, b=termF7, out=interF5);
    Or(a=interF3, b=interF5, out=f);


    And(a=notB, b=notC, out=termG1);
    And(a=notB, b=notD, out=termG2);
    And(a=notA, b=notB, out=termG3);
    And(a=A, b=notC, out=termGp4);
    And(a=termGp4, b=D, out=termG4);
    And(a=notA, b=C, out=termGp5);
    And(a=termGp5, b=D, out=termG5);
    And(a=notA, b=notC, out=termGp6);
    And(a=termGp6, b=notD, out=termG6);

    Or(a=termG1, b=termG2, out=interG1);
    Or(a=termG3, b=termG4, out=interG2);
    Or(a=termG5, b=termG6, out=interG3);

    Or(a=interG1, b=interG2, out=interG4);
    Or(a=interG3, b=interG4, out=g);

}