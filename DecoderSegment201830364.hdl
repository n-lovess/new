CHIP DecoderSegment201830364 {
IN A, B, C, D;
OUT d;

PARTS:

Not(in=A, out=notA);
Not(in=B, out=notB);
Not(in=C, out=notC);
Not(in=D, out=notD);

And(a=notA, b=notB, out=term1);          // Case 0000
And(a=notA, b=notB, out=term2part1);
And(a=term2part1, b=C, out=term2part2);  // Case 0100
And(a=term2part2, b=notD, out=term2);

And(a=notA, b=notB, out=term3part1);
And(a=term3part1, b=C, out=term3part2);  // Case 0101
And(a=term3part2, b=D, out=term3);

And(a=notA, b=notB, out=term4part1);
And(a=term4part1, b=notC, out=term4part2); // Case 0110
And(a=term4part2, b=notD, out=term4);

And(a=notA, b=notB, out=term5part1);
And(a=term5part1, b=C, out=term5part2);  // Case 1000
And(a=term5part2, b=D, out=term5);

And(a=notA, b=notB, out=term6part1);
And(a=term6part1, b=notC, out=term6part2); // Case 1001
And(a=term6part2, b=D, out=term6);

Or(a=term1, b=term2, out=inter1);
Or(a=inter1, b=term3, out=inter2);
Or(a=inter2, b=term4, out=inter3);
Or(a=inter3, b=term5, out=d);
}
